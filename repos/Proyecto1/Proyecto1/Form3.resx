<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4bqsi66y0eKYB+sx4IPNYiOHDsfB/9k=
</value>
  </data>
</root>